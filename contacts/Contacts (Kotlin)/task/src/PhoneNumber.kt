package contacts

import arrow.core.Either
import arrow.core.left
import arrow.core.right

/**
 * Phone number is expected to satisfy the following rules:
 * 1. The phone number should be split into groups using a space or dash. One group is also possible.
 * 2. Before the first group, there may or may not be a plus symbol.
 * 3. The first group or the second group can be wrapped in parentheses,
 *    but there should be no more than one group that is wrapped in parentheses.
 *    There may also be no groups wrapped in parentheses.
 * 4. A group can contain numbers, uppercase, and lowercase English letters.
 *    A group should be at least 2 symbols in length. But the first group may be only one symbol in length.
 */
@JvmInline
value class PhoneNumber private constructor(private val value: String) {
    override fun toString(): String = value

    companion object {
        // Regex is generated by JetBrains AI Assistant in order to satisfy the rules described above
        private val regex = Regex(
            "^\\+?(\\(?[a-z0-9]+\\)?|[a-z0-9]+)([-\\s]?\\(?[a-z0-9]{2,}\\)?|[-\\s]?[a-z0-9]{2,})*$",
            RegexOption.IGNORE_CASE
        )

        operator fun invoke(value: String): Either<Error.InvalidInput, PhoneNumber> =
            if (regex.matches(value)) PhoneNumber(value).right()
            else Error.InvalidInput("Wrong number format!").left()
    }
}